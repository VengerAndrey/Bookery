version: '3.4'

services:
  bookery.gateway:
    image: ${DOCKER_REGISTRY-}bookery-gateway
    build:
      context: .
      dockerfile: Bookery.Gateway/Dockerfile
    ports:
        - 5100:80
    volumes:
      - ~/.microsoft/usersecrets/$USER_SECRETS_ID:/root/.microsoft/usersecrets/$USER_SECRETS_ID:ro
    depends_on:
        - bookery.authentication
        - bookery.storage
        - bookery.node
        - bookery.user
        - rabbitmq

  bookery.authentication:
    image: ${DOCKER_REGISTRY-}bookery-authentication
    build:
      context: .
      dockerfile: Bookery.Authentication/Dockerfile
    ports:
        - 5165:80
    volumes:
      - ~/.microsoft/usersecrets/$USER_SECRETS_ID:/root/.microsoft/usersecrets/$USER_SECRETS_ID:ro
    depends_on:
      bookery.postgresql:
        condition: service_healthy

  bookery.storage:
    image: ${DOCKER_REGISTRY-}bookery-storage
    build:
      context: .
      dockerfile: Bookery.Storage/Dockerfile
    ports:
        - 5181:80
    volumes:
      - ~/.microsoft/usersecrets/$USER_SECRETS_ID:/root/.microsoft/usersecrets/$USER_SECRETS_ID:ro
    depends_on:
        rabbitmq:
          condition: service_healthy
    
  bookery.node:
    image: ${DOCKER_REGISTRY-}bookery-node
    build:
      context: .
      dockerfile: Bookery.Node/Dockerfile
    ports:
        - 5129:80
    volumes:
      - ~/.microsoft/usersecrets/$USER_SECRETS_ID:/root/.microsoft/usersecrets/$USER_SECRETS_ID:ro
    depends_on:
      bookery.postgresql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    
  bookery.user:
    image: ${DOCKER_REGISTRY-}bookery-user
    build:
      context: .
      dockerfile: Bookery.User/Dockerfile
    ports:
        - 5074:80
    volumes:
      - ~/.microsoft/usersecrets/$USER_SECRETS_ID:/root/.microsoft/usersecrets/$USER_SECRETS_ID:ro
    depends_on:
      bookery.postgresql:
        condition: service_healthy
            

  bookery.postgresql:
    image: postgres:14-alpine
    ports:
      - 5433:5432
    volumes:
      - ./volumes/postgresql:/var/lib/postgresql/data
      - ./scripts/initialize_db.sql:/docker-entrypoint-initdb.d/initialize_db.sql:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 4369:4369
      - 5671:5671
      - 5672:5672
      - 25672:25672
      - 15671:15671
      - 15672:15672
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq/mnesia
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5
